{"version":3,"file":"static/js/705.50982e58.chunk.js","mappings":"uQAEaA,EAAaC,EAAAA,EAAAA,KAAH,6IAQVC,EAAcD,EAAAA,EAAAA,MAAH,iIAQXE,EAAcF,EAAAA,EAAAA,MAAH,sTAoBXG,EAAeH,EAAAA,EAAAA,OAAH,mK,UC5BZI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAeXC,GAAaC,EAAAA,EAAAA,MACbC,GAAUD,EAAAA,EAAAA,MACVE,GAAaF,EAAAA,EAAAA,MAEnB,OACE,UAACT,EAAD,CAAYY,SAlBO,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfV,GACEW,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,OACN,EAOqCC,aAAa,MAAjD,WACE,SAACtB,EAAD,CAAauB,QAASjB,EAAtB,uBACA,SAACL,EAAD,CAAauB,GAAIlB,EAAYmB,KAAK,OAAOT,KAAK,UAC9C,SAAChB,EAAD,CAAauB,QAASf,EAAtB,oBACA,SAACP,EAAD,CAAauB,GAAIhB,EAASiB,KAAK,QAAQT,KAAK,WAC5C,SAAChB,EAAD,CAAauB,QAASd,EAAtB,uBACA,SAACR,EAAD,CAAauB,GAAIf,EAAYgB,KAAK,WAAWT,KAAK,cAClD,SAACd,EAAD,CAAcuB,KAAK,SAAnB,wBAGL,E,oBCvCYC,EAAW3B,EAAAA,EAAAA,GAAH,oEAKR4B,EAAU5B,EAAAA,EAAAA,EAAH,0FAMPG,EAAeH,EAAAA,EAAAA,OAAH,8D,uCCTZ6B,EAAiB,mCAAG,WAAMC,GAAN,uFACRC,EAAAA,EAAAA,KAAA,UAHb,uDAGa,gBAAiCD,GADzB,cACzBE,EADyB,OAE/BC,QAAQC,IAAIF,GAFmB,kBAGxBA,EAASG,MAHe,2CAAH,sD,UCEjBC,EAAS,WACpB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAArBF,KAUR,OACE,iCACE,SAACb,EAAD,iCACU,KAATW,GACC,iCACE,UAACV,EAAD,yJAGO,QAEP,UAACA,EAAD,gJAEmE,WAIrE,SAACA,EAAD,iGAKF,SAAC,EAAD,CAAcF,KAAK,SAASiB,QA7BL,WACzBd,EAAkB,CAAET,MAAOoB,EAAKpB,QAC7BwB,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPN,EAAQM,EACT,IACAC,OAAM,SAAAC,GAAG,OAAId,QAAQC,IAAIa,EAAIF,QAApB,GACb,EAuBG,0BAKL,ECvCc,SAASG,IACtB,IAAQC,GAAWR,EAAAA,EAAAA,IAAYC,EAAAA,IAAvBO,OAER,OACE,4BACE,SAACC,EAAA,EAAD,WACE,8CAEU,aAAXD,GAAwB,SAAC7C,EAAD,KAAmB,SAACgC,EAAD,MAGjD,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","components/Verify/Verify.styled.js","api/fetch-user.js","components/Verify/Verify.jsx","pages/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormStyled = styled.form`\n  padding: 15px;\n  width: 500px;\n  border: 2px solid #fe6b53;\n  border-radius: 5px;\n  margin: 0 auto 25px auto;\n`;\n\nexport const LabelStyled = styled.label`\n  display: block;\n  margin-bottom: 5px;\n  margin-left: 10px;\n  color: #fe6b53;\n  user-select: none;\n`;\n\nexport const InputStyled = styled.input`\n  display: block;\n  height: 25px;\n  width: 70%;\n  padding: 2px 5px;\n  border: 1px solid #bdbdbd;\n  border-radius: 4px;\n  margin-bottom: 15px;\n  color: #fe6b53;\n\n  ::placeholder {\n    color: #bdbdbd;\n  }\n\n  :focus {\n    outline: none;\n    border: 1px solid #fe6b53;\n  }\n`;\n\nexport const ButtonStyled = styled.button`\n  display: block;\n  margin-left: 150px;\n  height: 25px;\n  &:hover,\n  &:focus {\n    background-color: #1976d2;\n    color: #000;\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport {\n  ButtonStyled,\n  FormStyled,\n  InputStyled,\n  LabelStyled,\n} from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  const usernameId = nanoid();\n  const emailId = nanoid();\n  const passwordId = nanoid();\n\n  return (\n    <FormStyled onSubmit={handleSubmit} autoComplete=\"off\">\n      <LabelStyled htmlFor={usernameId}>Username</LabelStyled>\n      <InputStyled id={usernameId} type=\"text\" name=\"name\" />\n      <LabelStyled htmlFor={emailId}>Email</LabelStyled>\n      <InputStyled id={emailId} type=\"email\" name=\"email\" />\n      <LabelStyled htmlFor={passwordId}>Password</LabelStyled>\n      <InputStyled id={passwordId} type=\"password\" name=\"password\" />\n      <ButtonStyled type=\"submit\">Register</ButtonStyled>\n    </FormStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const H2styled = styled.h2`\n  text-align: center;\n  margin-top: 25px;\n`;\n\nexport const PStyled = styled.p`\n  text-align: center;\n  margin: 25px auto;\n  max-width: 500px;\n`;\n\nexport const ButtonStyled = styled.button`\n  display: block;\n  margin: 0 auto;\n`;\n","import axios from 'axios';\n\nconst URL = 'https://nodejs-hw-rest-api-contacts.onrender.com/api';\n\nexport const fetchResendVerify = async credentials => {\n  const response = await axios.post(`${URL}/auth/verify`, credentials);\n  console.log(response);\n  return response.data;\n};\n","import { ButtonStyled, H2styled, PStyled } from './Verify.styled';\nimport { useSelector } from 'react-redux';\nimport { selectAuth } from 'redux/auth/selectors';\nimport { fetchResendVerify } from 'api/fetch-user';\nimport { useState } from 'react';\n\nexport const Verify = () => {\n  const [send, setSend] = useState('');\n\n  const { user } = useSelector(selectAuth);\n\n  const handleResendVerify = () => {\n    fetchResendVerify({ email: user.email })\n      .then(({ message }) => {\n        setSend(message);\n      })\n      .catch(err => console.log(err.message));\n  };\n\n  return (\n    <>\n      <H2styled>Email verification</H2styled>\n      {send === '' ? (\n        <>\n          <PStyled>\n            We have sent you a letter to the e-mail address you specified during\n            registration. Please verify your email to continue working. Thank\n            you.{' '}\n          </PStyled>\n          <PStyled>\n            If you did not receive the letter, click the \"Send again\" button.\n            Please check your spam folder before clicking the resend button.{' '}\n          </PStyled>\n        </>\n      ) : (\n        <PStyled>\n          We have resent the letter to your e-mail, go to your e-mail to verify\n          the e-mail.\n        </PStyled>\n      )}\n      <ButtonStyled type=\"button\" onClick={handleResendVerify}>\n        Send again\n      </ButtonStyled>\n    </>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { selectAuth } from 'redux/auth/selectors';\nimport { useSelector } from 'react-redux';\nimport { Verify } from 'components/Verify/Verify';\n\nexport default function Register() {\n  const { verify } = useSelector(selectAuth);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      {verify === 'register' ? <RegisterForm /> : <Verify />}\n    </div>\n  );\n}\n"],"names":["FormStyled","styled","LabelStyled","InputStyled","ButtonStyled","RegisterForm","dispatch","useDispatch","usernameId","nanoid","emailId","passwordId","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","autoComplete","htmlFor","id","type","H2styled","PStyled","fetchResendVerify","credentials","axios","response","console","log","data","Verify","useState","send","setSend","user","useSelector","selectAuth","onClick","then","message","catch","err","Register","verify","Helmet"],"sourceRoot":""}